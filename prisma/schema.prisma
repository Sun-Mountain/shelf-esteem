generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Role {
  USER
  BETA
  MOD
  ADMIN
}

model Category {
  name  String
  books BookCategory[]

  @@id([name])
}

model IndustryIdentifier {
  type       String
  identifier String
  Book       Book?   @relation(fields: [bookId], references: [id], onDelete: Cascade)
  bookId     String?

  @@id([identifier])
}

model BookCategory {
  id           Int      @id @default(autoincrement())
  book         Book     @relation(fields: [bookId], references: [id], onDelete: Cascade)
  bookId       String
  category     Category @relation(fields: [categoryName], references: [name], onDelete: Cascade)
  categoryName String
}

model Book {
  id                  String               @unique
  authors             String[]
  categories          BookCategory[]
  description         String
  industryIdentifiers IndustryIdentifier[]
  language            String
  maturityRating      String
  pageCount           Int
  publishedDate       String
  publisher           String
  thumbnail           String
  title               String
  addedBy             String
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "users")
}
